<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd" >
<sqlMap namespace="kids">

<!-- =================================================================================================== -->
<!-- =================================메인페이지 쿼리======================================================= -->
<!-- =================================================================================================== -->
	<!-- 최신 장난감 정보 4개 -->
<select id="selectNewToy" resultClass="String">
<!-- 	select toy_image from (select toy_image from toyinfo order by toy_date desc) where rownum between 1 and 4
 -->
 	select toyimage from (select toyimage from toyinfo order by add_date desc) where rownum between 1 and 4
 
 </select>

	<!-- 인기 장난감 정보 4개 -->
<select id="selectPopToy" resultClass="String">
	select toyimage 
	from (select rentedtoy.toy_serial,count(*) as num from rentedtoy, toyinfo where rentedtoy.toy_serial = toyinfo.toy_serial group by rentedtoy.toy_serial order by num desc) i, toyinfo 
	where toyinfo.toy_serial = i.toy_serial and rownum between 1 and 4
</select>

	<!-- 공지 정보 4개 -->
<select id="selectMainNotice" resultClass="kidshome.model.Notice_Board">
	select notice_title, to_char(gdate,'yy/mm/dd') gdate from (select notice_title, gdate from notice_board order by gdate desc) where rownum between 1 and 4
</select>

	<!-- 자유게시글 정보 4개 -->
<select id="selectMainFree" resultClass="kidshome.model.Free_Board">
	select free_title, to_char(gdate,'yy/mm/dd') gdate from (select free_title, gdate from free_board order by gdate desc) where rownum between 1 and 4
</select>

	<!-- 후기게시글 정보 4개 -->
<select id="selectMainReview" resultClass="kidshome.model.Review_Board">
	select review_title, to_char(gdate,'yy/mm/dd') gdate from (select review_title, gdate from review_board order by gdate desc) where rownum between 1 and 4
</select>

<!-- =================================================================================================== -->
<!-- =================================장난감 정보 쿼리======================================================= -->
<!-- =================================================================================================== -->


<select id="selectToyDetail" resultClass="kidshome.model.Toys" parameterClass="String">
	select toy_serial, toyname, toykind, toyage, toyimage, to_char(add_date,'yyyy-mm-dd') add_date from toyinfo where toy_serial=#toy_serial#
</select>


<!-- <select id="selectAllToys" resultClass="kidshome.model.Toys">

</select> -->

<!-- =================================================================================================== -->
<!-- ================================= 로그인 관련 쿼리======================================================= -->
<!-- =================================================================================================== -->

<select id="selectId" resultClass="String" parameterClass="String">
		select id
		from userinfo
		where id=#id#
	</select>
	
	<select id="selectLogin" resultClass="String" parameterClass="String">
		 select pass from userinfo 
		 where id=#id#
	</select>
	
	
	<!-- 정보수정 -->
	<select id="selectAll" resultClass="kidshome.model.ToyMembers" parameterClass="String">
		select id,pass,name,to_char(birth,'yyyy-mm-dd') as birth, addr, email, tel, secure_code, secure_ans, auth, regdate from userinfo where id=#id#
	</select>
	
	<update id="updateMem" parameterClass="kidshome.model.ToyMembers">
		update userinfo 
		set pass=#pass#,addr=#addr#,email=#email#,tel=#tel#,secure_code=#secure_code#, secure_ans=#secure_ans# 
		where id = #id#
	</update>
	
	<select id="selectAuth" resultClass="int" parameterClass="String">
      select auth
      from userinfo
      where id = #id#
   </select>
   
<!-- =================================================================================================== -->
<!-- ================================= 아이디/비밀번호 찾기 쿼리======================================================= -->
<!-- =================================================================================================== -->
   
   	<select id="foundid" resultClass="String" parameterClass="kidshome.model.ToyMembers">
		select id
		from userinfo
		where name=#name# and tel=#tel#
	</select>
	
	<select id="selectPass" resultClass="kidshome.model.ToyMembers" parameterClass="String">
		select id, secure_code, secure_ans
		from userinfo
		where id=#id#
	</select>

	<!-- 보안 코드 확인 -->
	
	<select id="selectSecure" resultClass="String" parameterClass="String">
	 select secure_ans
	 from userinfo
	 where secure_ans=#secure_ans#
	</select>

	<!-- 비밀번호 변경 -->

	<update id="updatePass" parameterClass="kidshome.model.ToyMembers">
		update userinfo set pass=#pass#
		where id = #id#
	</update>


<!-- =================================================================================================== -->
<!-- ================================= 신청관련 쿼리======================================================= -->
<!-- =================================================================================================== -->
<insert id="giveInsert" parameterClass="kidshome.model.Give">
	insert into give_req values(give_seq.nextval,#id#,#toyname#,#method#,#toydesc#,#addr#,#image#,0,sysdate)
</insert>

<insert id="toyreqInsert" parameterClass="kidshome.model.ReqToy">
	insert into toy_req values(reqtoy_seq.nextval,#id#,#toyname#,#image#,#reason#,0,sysdate)
</insert>

<!-- 대여 신청 삭제 -->
<delete id="rentReqDel" parameterClass="java.util.Map">
	delete from rentreq where id=#id# and toy_serial = #serial#
</delete>

<update id="upInventory" parameterClass="String">
	update inventory set reqstate = reqstate - 1 where toy_serial = #serial#
</update>


<!-- =================================================================================================== -->
<!-- ================================= 신청관련 불러오기 쿼리======================================================= -->
<!-- =================================================================================================== -->

<!-- 기부현황 불러오기 -->
<select id="selectMyGive" resultClass="kidshome.model.Give" parameterClass="String">
 select toy_name as toyname, give_method method, toy_desc toydesc, addr, image, give_state, givedate dates from give_req where id=#id#
</select>

<!-- 장난감 요청 불러오기 -->
<select id="selectMyToyReq" resultClass="kidshome.model.ReqToy" parameterClass="String">
 select toy_name as toyname, toy_desc reason, toy_image image, reqdate, req_state from toy_req where id=#id#
</select>

<!-- 모든 기부 현황 불러오기 -->
<select id="selectGive" resultClass="kidshome.model.Give">
 select num, toy_name as toyname, give_method method, toy_desc toydesc, addr, image, give_state, givedate dates from give_req
</select>

<!-- 나의 대여 요청 불러오기 -->
<select id="selectMyRentReq" resultClass="kidshome.model.RentreqBeans" parameterClass="String">
	select rentreq.no, userinfo.id, name, toyinfo.toy_serial,toyname,toykind,toyage,rentstate,rentmethod,to_char(reqdate,'yyyy-mm-dd') reqdate 
	from rentreq, toyinfo, userinfo
	where rentreq.toy_serial=toyinfo.toy_serial and userinfo.id = rentreq.id and userinfo.id =#id#
</select>

<!-- 나의 대여 현황 불러오기 -->
<select id="selectMyRent" parameterClass="String" resultClass="kidshome.model.RentBeans">
<![CDATA[
select t.toy_serial, t.toyname, t.toykind, t.toyage, to_char(r.sdate,'yyyy-mm-dd') sdate, to_char(r.edate,'yyyy-mm-dd') edate, r.retstate, r.rentmethod, 
case when sysdate <= r.edate then 0 when sysdate > r.edate then round(sysdate - r.edate)*100 end as d
from toyinfo t, rentinfo r 
where t.toy_serial = r.toy_serial and r.id = #id#
order by retstate, r.sdate desc
]]>
</select>


<!-- 모든 장난감 요청 불러오기-->
<select id="selectToyReq" resultClass="kidshome.model.ReqToy">
 select num, toy_name as toyname, toy_desc reason, toy_image image, reqdate, req_state from toy_req
</select>

<!-- 요청 사항 업데이트하기 -->
<update id="updateToyReq" parameterClass="int">
	update toy_req set req_state = 1 where num = #num#
</update>
<update id="updateToyReqNo" parameterClass="int">
	update toy_req set req_state = 2 where num = #num#
</update>

<update id="updateGiveReq" parameterClass="int">
	update give_req set give_state = 1 where num = #num#
</update>

<!-- =================================================================================================== -->
<!-- =================================회원가입 & 탈퇴 쿼리======================================================= -->
<!-- =================================================================================================== -->
<insert id="insert" parameterClass="kidshome.model.ToyMembers">
	insert into userinfo values (#id#,#pass#,#name#,#birth#,#addr#,#email#,#tel#,#secure_code#,#secure_ans#,0,sysdate)
</insert>
<delete id="userinfodelete" parameterClass="String">
	delete from userinfo where id=#id#
</delete>



<!-- =================================================================================================== -->
<!-- ================================관리자 페이지 쿼리======================================================= -->
<!-- =================================================================================================== -->
<!-- 회원정보 불러오기 -->
<select id="selectAllMember" resultClass="kidshome.model.ToyMembers">
		select id,name,to_char(birth,'yyyy-mm-dd') as birth, addr, email,tel, auth, to_char(regdate,'yyyy-mm-dd hh24:mi') regdate from userinfo order by auth desc
</select>

<!-- 재고 정보 불러오기 -->
 <select id="selectAllInventory" resultClass="kidshome.model.Toys">
 	select toy_serial, toyname, toykind, toyage, toyimage, toytotal,rentstate, reqstate, damage, toytotal-rentstate-reqstate-damage vacant 
 	from toyinfo natural join inventory
 	order by rentstate desc
 </select>
 
 <!-- 재고의 총 재고 업데이트 하기 -->
 <update id="updateTotal" parameterClass="kidshome.model.Toys">
 	update inventory set toytotal=#toytotal# where toy_serial=#toy_serial#
 </update>

<!-- 회원 대여신청 불러오기 -->
<select id="selectAllRentReq" resultClass="kidshome.model.RentreqBeans">
	select rentreq.no, userinfo.id, name, tel,toyinfo.toy_serial,toyname,toykind,toyage,rentstate,rentmethod,to_char(reqdate,'yyyy-mm-dd') reqdate 
	from rentreq, toyinfo, userinfo
	where rentreq.toy_serial=toyinfo.toy_serial and rentreq.id = userinfo.id order by rentstate
</select>

<!-- 이름으로 회원 대여신청 불러오기 -->
<select id="selectAllRentReqByName" resultClass="kidshome.model.RentreqBeans" parameterClass="String">
	select rentreq.no, userinfo.id, name, tel,toyinfo.toy_serial,toyname,toykind,toyage,rentstate,rentmethod,to_char(reqdate,'yyyy-mm-dd') reqdate 
	from rentreq, toyinfo, userinfo
	where rentreq.toy_serial=toyinfo.toy_serial and rentreq.id = userinfo.id and userinfo.name = #name# order by rentstate
</select>

<!-- 전화번호로 회원 대여신청 불러오기 -->
<select id="selectAllRentReqByTel" resultClass="kidshome.model.RentreqBeans" parameterClass="String">
	select rentreq.no, userinfo.id, name, tel,toyinfo.toy_serial,toyname,toykind,toyage,rentstate,rentmethod,to_char(reqdate,'yyyy-mm-dd') reqdate 
	from rentreq, toyinfo, userinfo
	where rentreq.toy_serial=toyinfo.toy_serial and rentreq.id = userinfo.id and userinfo.tel like #tel# order by rentstate
</select>

<!-- 모든대여 현황 불러오기 -->
<select id="selectAllRent" resultClass="kidshome.model.RentBeans"><![CDATA[
select u.id, u.name, u.tel, t.toy_serial, t.toyname, t.toykind, t.toyage, to_char(r.sdate,'yyyy-mm-dd') sdate, to_char(r.edate,'yyyy-mm-dd') edate, r.retstate, r.rentmethod,
case when sysdate <= r.edate then 0 when sysdate > r.edate then round(sysdate - r.edate)*100 end as d
 from toyinfo t, rentinfo r, userinfo u 
 where t.toy_serial = r.toy_serial and r.id = u.id
 order by retstate, r.sdate desc
 ]]>
</select>

<!-- 이름 검색으로 대여 현황 불러오기 -->
<select id="selectAllRentByName" resultClass="kidshome.model.RentBeans" parameterClass="String">
<![CDATA[
select u.id, u.name, u.tel, t.toy_serial, t.toyname, t.toykind, t.toyage, to_char(r.sdate,'yyyy-mm-dd') sdate, to_char(r.edate,'yyyy-mm-dd') edate, 
r.retstate, r.rentmethod, case when sysdate <= r.edate then 0 when sysdate > r.edate then round(sysdate - r.edate)*100 end as d
 from toyinfo t, rentinfo r, userinfo u 
 where t.toy_serial = r.toy_serial and r.id = u.id and u.name = #name#
 order by r.sdate desc
 ]]>
</select>

<!-- 전화번호 뒷자리 검색으로 대여 현황 불러오기 -->

<select id="selectAllRentByTel" resultClass="kidshome.model.RentBeans" parameterClass="String">
<![CDATA[
select u.id, u.name, u.tel, t.toy_serial, t.toyname, t.toykind, t.toyage, to_char(r.sdate,'yyyy-mm-dd') sdate, to_char(r.edate,'yyyy-mm-dd') edate, r.retstate, r.rentmethod,
case when sysdate <= r.edate then 0 when sysdate > r.edate then round(sysdate - r.edate)*100 end as d
 from toyinfo t, rentinfo r, userinfo u 
 where t.toy_serial = r.toy_serial and r.id = u.id and u.tel like #tel#
 order by r.sdate desc
 ]]>
</select>

<!-- 반납 -->
<update id="returnIt" parameterClass="java.util.Map">
update rentinfo set retstate = 1 where toy_serial = #serial# and id = #id# and retstate = 0
</update>
<update id="returnIt2" parameterClass="java.util.Map">
update rentedtoy set retstate = 1 where toy_serial = #serial# and id = #id# and retstate = 0
</update>

<!-- 잘 반납 -->
<update id="returnInventory" parameterClass="String">
update inventory set rentstate = rentstate - 1 where toy_serial = #toy_serial#
</update>


<!-- 훼손 반납 -->
<update id="returnInventoryDamaged" parameterClass="String">
update inventory set rentstate = rentstate -1, damage = damage + 1 where toy_serial = #toy_serial#
</update>
<insert id="insertDamage" parameterClass="java.util.Map">
insert into damageinfo values(damageinfo_seq.nextval, #serial#, #id#, sysdate)
</insert>





  
<!-- =================================================================================================== -->
<!-- ================================장난감 대여 가능 여부 쿼리=============================================== -->
<!-- =================================================================================================== -->
<select id="checkIt" parameterClass="java.util.Map" resultClass="String">
select count(*) cnt from rentreq where id = #id# and toy_serial = #serial# and rentstate = 0 union select count(*) cnt from rentinfo where id = #id# and toy_serial = #serial# and retstate = 0 order by cnt desc
</select>

<select id="countMaximum" parameterClass="String" resultClass="String">
select count(*) cnt from rentreq where id = #id# and rentstate = 0 union select count(*) cnt from rentinfo where id = #id# and retstate = 0 order by cnt desc
</select>

<select id="checkVacant" parameterClass="String" resultClass="int">
select toytotal-rentstate-reqstate-damage vacant from inventory where toy_serial = #toy_serial#
</select>

<update id="updateInventory" parameterClass="String">
update inventory set reqstate = reqstate + 1 where toy_serial = #toy_serial#
</update>

<insert id="InsertMyRentReq" parameterClass="java.util.Map">
insert into rentreq values(rentreq_seq.nextval, #serial#,#id#,0,#rentmethod#,sysdate)
</insert>

<!-- 관리자가 대여 버튼 클릭시 -->

<!-- 택배신청 - [배송완료] -->
<insert id="insertPost" parameterClass="java.util.Map">
insert into rentinfo values(rentinfo_seq.nextval, #serial#, #id#, sysdate+1, sysdate+17, 0, #rentmethod#)
</insert>

<!-- 방문신청 - [대여완료] -->
<insert id="insertVisit" parameterClass="java.util.Map">
	insert into rentinfo values(rentinfo_seq.nextval, #serial#, #id#, sysdate, sysdate+15, 0, #rentmethod#)
</insert>




<!-- =================================================================================================== -->
<!-- ================================게시판 관련 쿼리======================================================= -->
<!-- =================================================================================================== -->
<!-- 자유게시판 -->
<insert id="free_insert" parameterClass="kidshome.model.Free_Board">
		insert into free_board (no,free_title,free_content,gdate,user_id,free_count)
					values (free_seq.nextval,#free_title#,#free_content#,sysdate,#user_id#,1)
	</insert>
	
	<select id="free_selectAll" resultClass="kidshome.model.Free_Board" parameterClass="java.util.Map">
		<![CDATA[
		select rn,no,free_title||'['||reply_count||']' as free_title,free_content,gdate,user_id,free_count,reply_count
		from(
			select rownum as rn,no,free_title,free_content,gdate,user_id,free_count,nvl(reply_count,'0') as reply_count
			from (
				 	select no,free_title,free_content,to_char(gdate,'yy/mm/dd') gdate,user_id,free_count
					from free_board 
				    ) A 
				    left outer join
				 	(
				 	select count(post_no) as reply_count,post_no
				 	from free_reply
				 	where board_no='1' 	
				 	group by board_no,post_no
				 	) B
				on A.no=B.post_no		 
		)
		where rn>=#start# and rn<=#end#
		order by no desc
		]]>
	</select>
	
	<select id="free_selectId" resultClass="kidshome.model.Free_Board" parameterClass="int">
		select no,free_title,free_content,to_char(gdate,'yy/mm/dd') gdate,user_id,free_count
		from free_board
		where no=#no#
	</select>
	
	<update id="free_update" parameterClass="kidshome.model.Free_Board">
		update free_board
		set free_title=#free_title#,free_content=#free_content#, gdate=sysdate
		where no = #no#
	</update>
	
	<delete id="free_delete" parameterClass="int">
		delete from free_board where no=#no#
	</delete>
	
	<select id="free_countAll" resultClass="int">
		select count(*) from free_board
	</select>
	
	<update id="free_count"  parameterClass="int">
		update free_board set free_count=free_count+1
		where no=#no#
	</update>
	
<!-- 공지사항 -->
	<insert id="notice_insert" parameterClass="kidshome.model.Notice_Board">
		insert into notice_board (no,notice_title,notice_content,gdate,user_id,notice_count)
					values (noti_seq.nextval,#notice_title#,#notice_content#,sysdate,#user_id#,1)
	</insert>
	
	<select id="notice_selectAll" resultClass="kidshome.model.Notice_Board" parameterClass="java.util.Map">
				<![CDATA[
		select rn,no,notice_title||'['||reply_count||']' as notice_title,notice_content,gdate,user_id,notice_count,reply_count
		from(
			select rownum as rn,no,notice_title,notice_content,gdate,user_id,notice_count,nvl(reply_count,'0') as reply_count
			from (
				 	select no,notice_title,notice_content,to_char(gdate,'yy/mm/dd') gdate,user_id,notice_count
					from notice_board 
				    ) A 
				    left outer join
				 	(
				 	select count(post_no) as reply_count,post_no
				 	from free_reply
				 	where board_no='2' 	
				 	group by board_no,post_no
				 	) B
				on A.no=B.post_no		 
		)
		where rn>=#start# and rn<=#end#
		order by no desc
		]]>
	</select>
	
	<select id="notice_selectId" resultClass="kidshome.model.Notice_Board" parameterClass="int">
		select no,notice_title,notice_content,to_char(gdate,'yy/mm/dd') gdate,user_id,notice_count
		from notice_board
		where no=#no#
	</select>
	
	<update id="notice_update" parameterClass="kidshome.model.Notice_Board">
		update notice_board
		set notice_title=#notice_title#,notice_content=#notice_content#, gdate=sysdate
		where no = #no#
	</update>
	
	<delete id="notice_delete" parameterClass="int">
		delete from notice_board where no=#no#
	</delete>
	
	<select id="notice_countAll" resultClass="int">
		select count(*) from notice_board
	</select>
	
	<update id="notice_count"  parameterClass="int">
		update notice_board set notice_count=notice_count+1
		where no=#no#
	</update>

<!-- 후기게시판 -->
<insert id="review_insert" parameterClass="kidshome.model.Review_Board">
		insert into review_board (no,review_title,review_content,gdate,user_id,review_count)
					values (review_seq.nextval,#review_title#,#review_content#,sysdate,#user_id#,1)
	</insert>
	
	<select id="review_selectAll" resultClass="kidshome.model.Review_Board"  parameterClass="java.util.Map">
		<![CDATA[
		select rn,no,review_title||'['||reply_count||']' as review_title,review_content,gdate,user_id,review_count,reply_count
		from(
			select rownum as rn,no,review_title,review_content,gdate,user_id,review_count,nvl(reply_count,'0') as reply_count
			from (
				 	select no,review_title,review_content,to_char(gdate,'yy/mm/dd') gdate,user_id,review_count
					from review_board 
				    ) A 
				    left outer join
				 	(
				 	select count(post_no) as reply_count,post_no
				 	from free_reply
				 	where board_no='0' 	
				 	group by board_no,post_no
				 	) B
				on A.no=B.post_no		 
		)
		where rn>=#start# and rn<=#end#
		order by no desc
		]]>
	</select>
	
	<select id="review_selectId" resultClass="kidshome.model.Review_Board" parameterClass="int">
		select no,review_title,review_content,to_char(gdate,'yy/mm/dd') gdate,user_id,review_count
		from review_board
		where no=#no#
	</select>
	
	<update id="review_update" parameterClass="kidshome.model.Review_Board">
		update review_board
		set review_title=#review_title#,review_content=#review_content#, gdate=sysdate
		where no = #no#
	</update>
	
	<delete id="review_delete" parameterClass="int">
		delete from review_board where no=#no#
	</delete>
	
	<select id="review_countAll" resultClass="int">
		select count(*) from review_board
	</select>
	
	<update id="review_count"  parameterClass="int">
		update review_board set review_count=review_count+1
		where no=#no#
	</update>

<!-- 댓글 -->
 <select id="listReply" parameterClass="java.util.Map" resultClass="kidshome.model.ReplyBeans">
	<![CDATA[select reply_no,user_id,content,gdate from free_reply where board_no=#board_no# and post_no=#post_no#]]>
 </select>
 
 <insert id="insertReply" parameterClass="java.util.Map">
 	<![CDATA[insert into free_reply values(reply_seq.nextval,#post_no#,#board_no#,#user_id#,#content#,sysdate)]]>
 </insert>
 
 <update id="updateReply" parameterClass="java.util.Map">
 	update free_reply set content=#content# where reply_no=#reply_no#
 </update>
 
 <delete id="deleteReply" parameterClass="String">
 	delete free_reply where reply_no=#reply_no#
 </delete>

<!-- =================================================================================================== -->
<!-- ================================장난감 페이지 쿼리======================================================= -->
<!-- =================================================================================================== -->

  <select id="selectcount" resultClass="int">
  select count(*) from toyinfo
  </select>
  <select id="selectcountn" resultClass="int" parameterClass="java.util.Map">
  select count(*) from toyinfo where toyname=#toyname#
  </select>
  <select id="selectcounta" resultClass="int" parameterClass="java.util.Map">
  select count(*) from toyinfo where toyage=#toyage#
  </select>
  <select id="selectcountk" resultClass="int" parameterClass="java.util.Map">
  select count(*) from toyinfo where toykind=#toykind#
  </select>
  <select id="selectcountna" resultClass="int" parameterClass="java.util.Map">
  select count(*) from toyinfo where toyname=#toyname# and toyage=#toyage#
  </select>
  <select id="selectcountnk" resultClass="int" parameterClass="java.util.Map">
  select count(*) from toyinfo where toyname=#toyname# and toykind=#toykind#
  </select>
  <select id="selectcountak" resultClass="int" parameterClass="java.util.Map">
  select count(*) from toyinfo where toyage=#toyage# and toykind=#toykind#
  </select>
  <select id="selectcountnak" resultClass="int" parameterClass="java.util.Map">
  select count(*) from toyinfo where toyname=#toyname# and toyage=#toyage# and toykind=#toykind#
  </select>
  <select id="searchtoy" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
  <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>
  <select id="searchtoyn" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
    <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial and toyname like #toyname#) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>
  <select id="searchtoya" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
  <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial and toyage=#toyage#) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>
  <select id="searchtoyk" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
  <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial and toykind=#toykind#) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>
  <select id="searchtoyna" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
  <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial and toyname like #toyname# and toyage=#toyage#) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>
  <select id="searchtoyak" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
  <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial and toyage=#toyage# and toykind=#toykind#) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>
  <select id="searchtoynk" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
  <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial and toyname like #toyname# and toykind=#toykind#) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>
  <select id="searchtoynak" resultClass="kidshome.model.Toys" parameterClass="java.util.Map">
  <![CDATA[select toy_serial,toyname,toykind,toyage,add_date,toyimage,vacant
  from (select rownum rn,t.toy_serial toy_serial, t.toyname toyname,t.toykind toykind,t.toyage toyage, t.toyimage toyimage, i.toytotal toytotal, i.toytotal-i.rentstate-i.reqstate-i.damage as vacant, add_date 
from toyinfo t, inventory i where t.toy_serial = i.toy_serial and toyname like #toyname# and toyage=#toyage# and toykind=#toykind#) 
  where rn>=#min_ct# and rn<=#max_ct#]]>
  </select>

</sqlMap>
